apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: n8n
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
        - name: n8n
          image: n8nio/n8n:1.107.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3008
              protocol: TCP
          env:
            - name: DB_POSTGRESDB_HOST
              valueFrom:
                secretKeyRef:
                  key: DB_HOST
                  name: n8n-postgres-app
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  key: DB_USER
                  name: n8n-postgres-app
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: DB_PASSWORD
                  name: n8n-postgres-app
            - name: WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: n8n-webhook-url
                  key: WEBHOOK_URL
            - name: N8N_HOST
              valueFrom:
                secretKeyRef:
                  name: n8n-host
                  key: N8N_HOST
            - name: N8N_EDITOR_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: n8n-baseurl
                  key: N8N_EDITOR_BASE_URL                
          envFrom:
            - configMapRef:
                name: n8n-config
            - secretRef:
                name: n8n-postgres-app
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: n8n-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-data

